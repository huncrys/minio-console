{"version":3,"file":"static/js/7052.0ab8007b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/ConfTargetGeneric.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  WebhookIcon,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api.configs\n      .setConfig(type, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <InputBox\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n          <InputBox\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9_\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n          <InputBox\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </FormLayout>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <ProgressBar />\n          </Grid>\n        )}\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api.configs\n        .resetConfig(selectedARN)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  ReadBox,\n  Switch,\n  Tooltip,\n  WebhookIcon,\n} from \"mds\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport { overrideFields } from \"../../Configurations/utils\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\",\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\",\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\",\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(name, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override,\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout withBorders={false} containerPadding={false}>\n          {hasOverride.length > 0 ? (\n            <Fragment>\n              <ReadBox\n                label={\"Enabled\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.enable?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.enable?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Endpoint\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.endpoint?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.endpoint?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Auth Token\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.auth_token?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.auth_token?.value || \"-\"}\n              </ReadBox>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Switch\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n              <InputBox\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9_\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n              <InputBox\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n              {saving && (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    marginBottom: 10,\n                  }}\n                >\n                  <ProgressBar />\n                </Grid>\n              )}\n              <Grid item sx={modalStyleUtils.modalButtonBar}>\n                <Button\n                  id={\"reset\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  disabled={saving}\n                  onClick={onCloseEndpoint}\n                  label={\"Cancel\"}\n                />\n                <Button\n                  id={\"save-lifecycle\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={saving || invalidInputs.length !== 0}\n                  label={\"Update\"}\n                  onClick={updateWebhook}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </FormLayout>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\nimport { Configuration } from \"api/consoleApi\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: Configuration[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item,\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values?.filter(\n            (itm) => !!itm.env_override,\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride && hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Box, Button, Grid, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { Configuration, ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<Configuration[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations,\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api.configs\n          .configInfo(configId)\n          .then((res) => {\n            setConfigSubsysList(res.data);\n            let values: ConfigurationKV[] = get(res.data[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals: IElementValue[] = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: ConfigurationKV) => element.key === field.name,\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n                env_override: includedValue?.env_override,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api.configs\n        .setConfig(selectedConfiguration.configuration_id, payload)\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.data.restart || false));\n          dispatch(configurationIsLoading(true));\n          if (!res.data.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj],\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(\n              `settings_${selectedConfiguration.configuration_label}`,\n            ),\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      type={\"button\"}\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName,\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\",\n        )}.conf`,\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart,\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined,\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  HelpBox,\n  PageLayout,\n  ScreenTitle,\n  SettingsIcon,\n  Tabs,\n} from \"mds\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\n\nimport HelpMenu from \"../../HelpMenu\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"../../../../api\";\nimport { IElement } from \"../types\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\n// region is not part of config subsystem list.\nconst NON_SUB_SYS_CONFIG_ITEMS = [\"region\"];\nconst IGNORED_CONFIG_SUB_SYS = [\"cache\"]; // cache config is not supported.\n\nconst ConfigurationOptions = () => {\n  const { pathname = \"\" } = useLocation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [configSubSysList, setConfigSubSysList] = useState<string[]>([]);\n  const fetchConfigSubSysList = useCallback(async () => {\n    api.configs\n      .listConfig() // get a list of available config subsystems.\n      .then((res) => {\n        if (res && res?.data && res?.data?.configurations) {\n          const confSubSysList = (res?.data?.configurations || []).reduce(\n            (acc: string[], { key = \"\" }) => {\n              if (!IGNORED_CONFIG_SUB_SYS.includes(key)) {\n                acc.push(key);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          setConfigSubSysList(confSubSysList);\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchConfigSubSysList();\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const availableConfigSubSys = configurationElements.filter(\n    ({ configuration_id }: IElement) => {\n      return (\n        NON_SUB_SYS_CONFIG_ITEMS.includes(configuration_id) ||\n        configSubSysList.includes(configuration_id) ||\n        !configSubSysList.length\n      );\n    },\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Configuration\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12} id={\"settings-container\"}>\n          <ScreenTitle\n            icon={<SettingsIcon />}\n            title={\"MinIO Configuration:\"}\n            actions={\n              <Box\n                sx={{\n                  display: \"flex\",\n                  gap: 10,\n                }}\n              >\n                <ImportConfigButton />\n                <ExportConfigButton />\n              </Box>\n            }\n            sx={{ marginBottom: 15 }}\n          />\n          <Tabs\n            currentTabOrPath={pathname}\n            onTabClick={(path) => {\n              navigate(path);\n            }}\n            useRouteTabs\n            options={availableConfigSubSys.map((element) => {\n              const { configuration_id, configuration_label, icon } = element;\n              return {\n                tabConfig: {\n                  id: `settings-tab-${configuration_label}`,\n                  label: configuration_label,\n                  value: configuration_id,\n                  icon: icon,\n                  to: getRoutePath(configuration_id),\n                },\n              };\n            })}\n            routes={\n              <Routes>\n                {availableConfigSubSys.map((element) => (\n                  <Route\n                    key={`configItem-${element.configuration_label}`}\n                    path={`${element.configuration_id}`}\n                    element={<ConfigurationForm />}\n                  />\n                ))}\n                <Route\n                  path={\"/\"}\n                  element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                />\n              </Routes>\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ConfigurationOptions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport {\n  CodeIcon,\n  CompressIcon,\n  ConsoleIcon,\n  FindReplaceIcon,\n  FirstAidIcon,\n  KeyIcon,\n  LogsIcon,\n  PendingItemsIcon,\n  PublicIcon,\n} from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <FirstAidIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <KeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <ConsoleIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingItemsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: <LogsIcon />,\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[],\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value || \"\",\n        overrideEnv: envItem.env_override.name || \"\",\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  CommentBox,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  ReadBox,\n  Switch,\n  Tooltip,\n} from \"mds\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n}\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nconst valueDef = (key: string, type: string, defaults: IElementValue[]) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <ReadBox\n            label={field.label}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n            sx={{ width: \"100%\" }}\n          >\n            {override.value}\n          </ReadBox>\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e) => setValueElement(field.name, e.target.value, item)}\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <FormLayout withBorders={false} containerPadding={false}>\n      {fieldsElements.map((field, item) => (\n        <Fragment key={field.name}>{fieldDefinition(field, item)}</Fragment>\n      ))}\n    </FormLayout>\n  );\n};\n\nexport default ConfTargetGeneric;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nimport { ConfirmDeleteIcon, ProgressBar } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <ProgressBar />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n"],"names":["_ref","elements","name","label","tooltip","commonPlaceholder","onChange","withBorder","currentElements","setCurrentElements","useState","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","element","trim","join","onChangeElement","e","persist","updatedElement","index","get","target","parseInt","value","inputs","map","_jsx","InputBox","id","toString","placeholder","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Fragment","children","_jsxs","Box","sx","display","className","InputLabel","alignItems","marginLeft","width","Tooltip","placement","HelpIcon","withBorders","overflowY","height","position","ref","onClose","modalOpen","title","wideLimit","titleIcon","iconColor","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","type","detailedErrorMsg","ModalBox","open","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","variant","autoHideDuration","condensed","onCloseEndpoint","setName","endpoint","setEndpoint","authToken","setAuthToken","saving","setSaving","invalidInputs","setInvalidInput","initialInputs","setInitialInputs","initializeInput","item","validateInput","valid","includes","icon","WebhookIcon","ConsoleIcon","PendingItemsIcon","ModalWrapper","FormLayout","containerPadding","event","validity","error","pattern","required","Grid","xs","marginBottom","ProgressBar","modalStyleUtils","modalButtonBar","Button","disabled","onClick","marginRight","color","saveWebhook","payload","key_values","key","arn_resource_id","api","configs","setConfig","then","res","setServerNeedsRestart","data","restart","setSnackBarMessage","configurationIsLoading","catch","err","setErrorSnackMessage","errorToHandler","selectedARN","deleteLoading","setDeleteLoading","resetConfig","defaultWH","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","ConfirmDeleteIcon","confirmationContent","_overrideValues$enabl","_overrideValues$enabl2","_overrideValues$endpo","_overrideValues$endpo2","_overrideValues$auth_","_overrideValues$auth_2","endpointInfo","endpointState","setEndpointState","endpointLocate","find","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","ReadBox","actionButton","justifyContent","paddingRight","overrideEnv","style","auth_token","Switch","checked","updateWebhook","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","actions","disableButtonFunction","wHook","_wHook$key_values","container","AddEndpointModal","DeleteWebhookEndpoint","onCloseDelete","EditWebhookEndpoint","onCloseEditWebhook","padding","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","flexDirection","justifyItems","fontSize","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","selectedConfiguration","navigate","useNavigate","pathname","useLocation","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","loadingConfigurations","configId","configInfo","values","keyVals","fieldsConfigurations","field","includedValue","customValue","customValueProcess","removeEmptyFields","configuration_id","onValueChange","newValue","resetConfigurationMOpen","onMouseMove","setHelpName","configuration_label","ResetConfigurationModal","configurationName","closeResetModalAndRefresh","resetOpen","textAlign","paddingTop","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","flexFlow","gridTemplateColumns","gap","ConfTargetGeneric","fields","defaultVals","maxHeight","ConfigurationsList","configName","validActiveConfig","configurationElements","containerClassName","minWidth","EditConfiguration","ExportConfigButton","useDispatch","isReqLoading","invokeApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","TooltipWrapper","UploadIcon","ImportConfigButton","needsRestart","serverNeedsRestart","refreshPage","setRefreshPage","undefined","fileUpload","files","fileToUpload","formData","FormData","blobFile","append","click","DownloadIcon","NON_SUB_SYS_CONFIG_ITEMS","IGNORED_CONFIG_SUB_SYS","ConfigurationOptions","configSubSysList","setConfigSubSysList","fetchConfigSubSysList","async","listConfig","_res$data","configurations","_res$data2","confSubSysList","reduce","acc","availableConfigSubSys","_ref2","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","Tabs","currentTabOrPath","onTabClick","path","useRouteTabs","options","tabConfig","to","IAM_PAGES","SETTINGS","routes","Routes","Route","ConfigurationForm","Navigate","HelpBox","iconComponent","help","href","rel","PublicIcon","CompressIcon","CodeIcon","FirstAidIcon","FindReplaceIcon","KeyIcon","LogsIcon","region","compression","heal","scanner","etcd","multiline","logger_webhook","audit_webhook","audit_kafka","origValue","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","overrideReturn","forEach","envItem","valueDef","defaults","defValue","storedConfig","valueHolder","setValueHolder","fieldsElements","defValList","setValueElement","valuesDup","fieldDefinition","holderItem","override","CSVMultiSelector","valCh","Array","isArray","CommentBox","resetLoading","setResetLoading","resetConfiguration","maxWidth","whiteSpace","wordWrap"],"sourceRoot":""}