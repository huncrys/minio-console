{"version":3,"file":"static/js/5153.1e029986.chunk.js","mappings":"8IAiCA,QAfA,SACEA,GAEC,IADDC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAUtC,OARA,SAA+BG,GAC7B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACN,SAAUA,EAASO,UAC3BF,EAAAA,EAAAA,KAACN,EAAgB,IAAMK,KAG7B,CAGF,C,0ICZA,MAYA,EAZmBA,IACjBC,EAAAA,EAAAA,KAAA,OACEG,MAAM,6BACNC,QAAQ,YACRC,UAAW,WACXC,KAAM,kBACFP,EAAKG,UAETF,EAAAA,EAAAA,KAAA,WAASO,OAAO,oECKdC,EAAsBC,EAAAA,GAAOC,KAAIC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACrDE,QAAS,OACTC,oBAAqB,kCACrBC,eAAgB,aAChBC,UAAW,GACXC,WAAY,GACZ,UAAW,CACTC,aAAc,GAAGC,IAAIP,EAAO,cAAe,uBAC3CQ,QAAS,YACTL,eAAgB,SAChB,UAAW,CACTK,QAAS,GAEX,eAAgB,CACdC,YAAa,GAAGF,IAAIP,EAAO,oBAAqB,uBAChDU,WAAY,GAAGH,IAAIP,EAAO,oBAAqB,uBAC/C,UAAW,CACTW,UAAW,GAAGJ,IAAIP,EAAO,oBAAqB,uBAC9CY,oBAAqB,GACrBC,qBAAsB,IAExB,SAAU,CACRC,cAAe,GACfR,aAAc,GAAGC,IAAIP,EAAO,oBAAqB,uBACjDe,uBAAwB,GACxBC,wBAAyB,KAG7B,eAAgB,CACdP,YAAa,oBACbC,WAAY,oBACZ,UAAW,CACTC,UAAW,oBACXC,oBAAqB,GACrBC,qBAAsB,IAExB,SAAU,CACRC,cAAe,GACfR,aAAc,oBACdS,uBAAwB,GACxBC,wBAAyB,KAG7B,wBAAyB,CACvBC,UAAW,UAEb,kBAAmB,CACjBC,YAAa,GAEf,mBAAoB,CAClBZ,aAAc,IAGlB,cAAe,CACba,WAAY,IACZC,SAAU,GACVH,UAAW,SACXI,MAAO,OACPC,aAAc,GACdd,QAAS,QACTI,oBAAqB,GACrBC,qBAAsB,GACtB,eAAgB,CACdU,gBAAiB,GAAGhB,IAAIP,EAAO,oBAAqB,cAEtD,eAAgB,CACduB,gBAAiB,YAGrB,cAAe,CACbC,OAAQ,GACRvB,QAAS,OACTwB,WAAY,aACZtB,eAAgB,SAChB,QAAS,CACPqB,OAAQ,KAGZ,qBAAsB,CACpBvB,QAAS,OACTE,eAAgB,UAEnB,IAoHD,EAlHqBuB,IAAuC,IAADC,EAAA,IAArC,YAAEC,GAA8BF,EAChDG,EAAeD,EAEJ,OAAXA,QAAW,IAAXA,GAAiB,QAAND,EAAXC,EAAaE,YAAI,IAAAH,OAAN,EAAXA,EAAmBI,cADnB,YAGJ,MAAMC,EAAYA,CAACC,EAAcC,EAAiBC,KAChD,IAAIC,EACc,cAAhBP,EAA8B,wBAA0BI,EAC1D,OACE7C,EAAAA,EAAAA,KAACiD,EAAAA,IAAM,CACLC,GAAI,kBAAkBL,IACtBE,QAASA,EACTI,GAAI,CACFnC,UAAW,OACXoC,MAAO,MACPhB,OAAQ,QAEViB,QAAUC,IACRA,EAAEC,iBAEFC,OAAOC,KAAK,GAAGT,YAAqB,SAAS,EAE/CU,MAAOZ,GACP,EAIAa,EAA4BC,GAC5BA,GAEAC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA5D,SAAA,CACN0D,EAAQA,QACRA,EAAQG,UAAW/D,EAAAA,EAAAA,KAACgE,EAAS,CAACC,MAAO,CAAEb,MAAO,GAAIhB,OAAQ,UAI1DpC,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,IAGlB,OACE9D,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,CAAA5D,UACP2D,EAAAA,EAAAA,MAACrD,EAAmB,CAAAN,SAAA,CACjB,CAAC,QAASgE,EAAAA,IAA2BC,KAAI,CAACC,EAASC,KAEhDrE,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CACFjE,UAAW,UAAmB,IAAVgE,EAAc,aAAyB,IAAVA,EAAc,aAAe,IAAKnE,SAEtE,OAAZkE,IACCP,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CAAApE,SAAA,EACFF,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CACFjE,UAAW,cAAuB,IAAVgE,EAAc,aAAyB,IAAVA,EAAc,aAAe,IAAKnE,SAEtFkE,EAAQG,YAEXvE,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CACFjE,UAAW,aACY,eAArB+D,EAAQI,SAA4B,aAAe,IAClDtE,SAEK,OAAPkE,QAAO,IAAPA,OAAO,EAAPA,EAASK,YAEZzE,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CAACjE,UAAW,kBAAkBH,SACxB,OAAPkE,QAAO,IAAPA,OAAO,EAAPA,EAASM,yBAOrBC,EAAAA,GAAcR,KAAI,CAACS,EAASP,KAC3B,MAAMQ,EACJR,IAAUM,EAAAA,GAAc9E,OAAS,EAAI,iBAAmB,GAE1D,OACEgE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA5D,SAAA,EACPF,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CAACjE,UAAW,iBAAiBwE,IAAW3E,SACzC0E,EAAQE,gBAEX9E,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CAACjE,UAAW,mCAAmCwE,IAAW3E,SAC3DyD,EACCiB,EAAQG,aAAaC,YAAc,SAGvChF,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CAACjE,UAAW,kCAAkCwE,IAAW3E,SAC1DyD,EAAyBiB,EAAQG,aAAaE,SAAW,UAEnD,IAGd,CAAC,QAASf,EAAAA,IAA2BC,KAAI,CAACC,EAASC,KAEhDrE,EAAAA,EAAAA,KAACsE,EAAAA,IAAG,CACFjE,UAAW,QACC,IAAVgE,EAAc,aAAyB,IAAVA,EAAc,aAAe,oBAE5DlB,GAAI,CACFtC,QAAS,OACTE,eAAgB,UAChBb,SAEDkE,GACCxB,EACE,wBACqB,eAArBwB,EAAQI,SAA4B,UAAY,aAC3B,eAArBJ,EAAQI,SAA4B,aAAe,mBAMtD,E,gDCvMf,MAAMU,GAAsBC,EAAAA,EAAAA,GAC1BC,EAAAA,MAAW,IAAM,mCAoHnB,EAjHgBC,KACd,MAAOC,EAAsBC,IAC3BC,EAAAA,EAAAA,WAAkB,IAEbhD,EAAaiD,IAAkBD,EAAAA,EAAAA,aAC/BE,EAAeC,IAAoBH,EAAAA,EAAAA,UAAiB,IACpDI,EAAoBC,IAAyBL,EAAAA,EAAAA,WAAkB,IAC/DM,EAAuBC,IAC5BP,EAAAA,EAAAA,WAAkB,IACpBA,EAAAA,EAAAA,WAAkB,GAClB,MAAOQ,EAAmBC,IAAwBT,EAAAA,EAAAA,WAAkB,IAE7DU,EAAsBC,IAC3BX,EAAAA,EAAAA,WAAkB,GAOdY,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,KACRF,GAASG,EAAAA,EAAAA,IAAY,WAAW,GAE/B,IAEH,MAAMC,EAAehE,GAAewD,EAE9BS,GAAoBC,EAAAA,EAAAA,OAE1BJ,EAAAA,EAAAA,YAAU,MAELE,IAAiBC,IAAsBX,IAEpBF,GACpBO,GAAwB,EAC1B,GACC,CACDK,EACAC,EACAX,EACAF,IAGF,MAAMe,GAAmBC,EAAAA,EAAAA,cAAY,KAC/BhB,IAGJC,GAAsB,GACtBgB,EAAAA,EACGC,OAAO,MAAO,uBACdC,MAAMC,IACDA,IACe,aAAbA,EAAItE,KACNiD,EAAiB,GAEjB,CAAC,aAAc,kBAAmB,mBAAmBsB,SACnDD,EAAItE,MAGNiD,EAAiB,GAEjBA,EAAiB,GAEnBF,EAAeuB,IAEjBf,GAAqB,GACrBJ,GAAsB,EAAM,IAE7BqB,OAAM,KACLjB,GAAqB,GACrBJ,GAAsB,EAAM,IAC5B,GACH,CAACD,IASJ,OAPAU,EAAAA,EAAAA,YAAU,KACJR,IACFa,IACAZ,GAAyB,GAC3B,GACC,CAACY,EAAkBb,EAAuBC,IAEzCH,GAEA5F,EAAAA,EAAAA,KAACmH,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGnH,UAChBF,EAAAA,EAAAA,KAACsH,EAAAA,IAAW,OAMhBzD,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA5D,SAAA,EACPF,EAAAA,EAAAA,KAACuH,EAAAA,EAAiB,CAAC7D,MAAM,uCACzBG,EAAAA,EAAAA,MAAC2D,EAAAA,IAAU,CAAAtH,SAAA,EACTF,EAAAA,EAAAA,KAACyH,EAAY,CACXnC,qBAAsBA,EACtBoC,8BAjF8BA,KACpCnC,GAAwB,GACxBoB,GAAkB,EAgFZnE,YAAaA,EACbkD,cAAeA,EACfH,wBAAyBA,KAG3BvF,EAAAA,EAAAA,KAACkF,EAAmB,CAClByC,OAAQzB,EACR0B,QAASA,KACPzB,GAAwB,EAAM,SAI3B,C","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/License/CheckIcon.tsx","screens/Console/License/LicensePlans.tsx","screens/Console/License/License.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","//  This file is part of MinIO Console Server\n//  Copyright (c) 2024 MinIO, Inc.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU Affero General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU Affero General Public License for more details.\n//\n//  You should have received a copy of the GNU Affero General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CheckIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={`min-icon`}\n    fill={\"currentcolor\"}\n    {...props}\n  >\n    <polygon points=\"8.5 16.5 21.5 3.6 23.4 5.5 8.5 20.4 .6 12.5 2.5 10.5 8.5 16.5\" />\n  </svg>\n);\n\nexport default CheckIcon;\n","//  This file is part of MinIO Console Server\n//  Copyright (c) 2022 MinIO, Inc.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU Affero General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU Affero General Public License for more details.\n//\n//  You should have received a copy of the GNU Affero General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, Button } from \"mds\";\nimport { SubnetInfo } from \"./types\";\nimport { FEATURE_ITEMS, FeatureItem, LICENSE_PLANS_INFORMATION } from \"./utils\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport CheckIcon from \"./CheckIcon\";\n\ninterface IRegisterStatus {\n  activateProductModal: any;\n  closeModalAndFetchLicenseInfo: any;\n  licenseInfo: SubnetInfo | undefined;\n  currentPlanID: number;\n  setActivateProductModal: any;\n}\n\nconst LicensesInformation = styled.div(({ theme }) => ({\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, minmax(270px, 320px))\",\n  justifyContent: \"flex-start\",\n  marginTop: 30,\n  marginLeft: 30,\n  \"& > div\": {\n    borderBottom: `${get(theme, \"borderColor\", \"#EAEAEA\")} 1px solid`,\n    padding: \"25px 30px\",\n    justifyContent: \"center\",\n    \"&.first\": {\n      padding: 0,\n    },\n    \"&.openSource\": {\n      borderRight: `${get(theme, \"signalColors.main\", \"#002562\")} 2px solid`,\n      borderLeft: `${get(theme, \"signalColors.main\", \"#002562\")} 2px solid`,\n      \"&.first\": {\n        borderTop: `${get(theme, \"signalColors.main\", \"#002562\")} 2px solid`,\n        borderTopLeftRadius: 12,\n        borderTopRightRadius: 12,\n      },\n      \"&.last\": {\n        paddingBottom: 30,\n        borderBottom: `${get(theme, \"signalColors.main\", \"#002562\")} 2px solid`,\n        borderBottomLeftRadius: 12,\n        borderBottomRightRadius: 12,\n      },\n    },\n    \"&.enterprise\": {\n      borderRight: `#a0a0a0 2px solid`,\n      borderLeft: `#a0a0a0 2px solid`,\n      \"&.first\": {\n        borderTop: `#a0a0a0 2px solid`,\n        borderTopLeftRadius: 12,\n        borderTopRightRadius: 12,\n      },\n      \"&.last\": {\n        paddingBottom: 30,\n        borderBottom: `#a0a0a0 2px solid`,\n        borderBottomLeftRadius: 12,\n        borderBottomRightRadius: 12,\n      },\n    },\n    \"&.feature-information\": {\n      textAlign: \"center\" as const,\n    },\n    \"&.feature-label\": {\n      paddingLeft: 5,\n    },\n    \"&.noBorderBottom\": {\n      borderBottom: 0,\n    },\n  },\n  \"& .planName\": {\n    fontWeight: 600,\n    fontSize: 18,\n    textAlign: \"center\" as const,\n    color: \"#fff\",\n    marginBottom: 30,\n    padding: \"8px 0\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    \"&.openSource\": {\n      backgroundColor: `${get(theme, \"signalColors.main\", \"#002562\")}`,\n    },\n    \"&.enterprise\": {\n      backgroundColor: \"#a0a0a0\",\n    },\n  },\n  \"& .planIcon\": {\n    height: 90,\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    \"& svg\": {\n      height: 50,\n    },\n  },\n  \"& .planDescription\": {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst LicensePlans = ({ licenseInfo }: IRegisterStatus) => {\n  let currentPlan = !licenseInfo\n    ? \"community\"\n    : licenseInfo?.plan?.toLowerCase();\n\n  const getButton = (link: string, btnText: string, variant: any) => {\n    let linkToNav =\n      currentPlan !== \"community\" ? \"https://subnet.min.io\" : link;\n    return (\n      <Button\n        id={`license-action-${link}`}\n        variant={variant}\n        sx={{\n          marginTop: \"12px\",\n          width: \"80%\",\n          height: \"40px\",\n        }}\n        onClick={(e) => {\n          e.preventDefault();\n\n          window.open(`${linkToNav}?ref=con`, \"_blank\");\n        }}\n        label={btnText}\n      />\n    );\n  };\n\n  const renderFeatureInformation = (content: FeatureItem | null) => {\n    if (content) {\n      return (\n        <Fragment>\n          {content.content}\n          {content.isCheck && <CheckIcon style={{ width: 16, height: 16 }} />}\n        </Fragment>\n      );\n    }\n    return <Fragment />;\n  };\n\n  return (\n    <Fragment>\n      <LicensesInformation>\n        {[null, ...LICENSE_PLANS_INFORMATION].map((element, index) => {\n          return (\n            <Box\n              className={`first ${index === 1 ? \"openSource\" : index === 2 ? \"enterprise\" : \"\"}`}\n            >\n              {element !== null && (\n                <Box>\n                  <Box\n                    className={`planName  ${index === 1 ? \"openSource\" : index === 2 ? \"enterprise\" : \"\"}`}\n                  >\n                    {element.planName}\n                  </Box>\n                  <Box\n                    className={`planIcon ${\n                      element.planType === \"commercial\" ? \"commercial\" : \"\"\n                    }`}\n                  >\n                    {element?.planIcon}\n                  </Box>\n                  <Box className={\"planDescription\"}>\n                    {element?.planDescription}\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          );\n        })}\n        {FEATURE_ITEMS.map((feature, index) => {\n          const lastItem =\n            index === FEATURE_ITEMS.length - 1 ? \"noBorderBottom\" : \"\";\n\n          return (\n            <Fragment>\n              <Box className={`feature-label ${lastItem}`}>\n                {feature.featureLabel}\n              </Box>\n              <Box className={`feature-information  openSource ${lastItem}`}>\n                {renderFeatureInformation(\n                  feature.featurePlans.openSource || null,\n                )}\n              </Box>\n              <Box className={`feature-information enterprise ${lastItem}`}>\n                {renderFeatureInformation(feature.featurePlans.eosPlus || null)}\n              </Box>\n            </Fragment>\n          );\n        })}\n        {[null, ...LICENSE_PLANS_INFORMATION].map((element, index) => {\n          return (\n            <Box\n              className={`last ${\n                index === 1 ? \"openSource\" : index === 2 ? \"enterprise\" : \"\"\n              } noBorderBottom`}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              {element &&\n                getButton(\n                  `https://min.io/signup`,\n                  element.planType === \"commercial\" ? \"Upgrade\" : \"Join Slack\",\n                  element.planType === \"commercial\" ? \"callAction\" : \"regular\",\n                )}\n            </Box>\n          );\n        })}\n      </LicensesInformation>\n    </Fragment>\n  );\n};\n\nexport default LicensePlans;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { PageLayout, ProgressBar, Grid } from \"mds\";\nimport { SubnetInfo } from \"./types\";\nimport api from \"../../../common/api\";\nimport LicensePlans from \"./LicensePlans\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport { getLicenseConsent } from \"./utils\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\nconst LicenseConsentModal = withSuspense(\n  React.lazy(() => import(\"./LicenseConsentModal\")),\n);\n\nconst License = () => {\n  const [activateProductModal, setActivateProductModal] =\n    useState<boolean>(false);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [currentPlanID, setCurrentPlanID] = useState<number>(0);\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(false);\n  const [initialLicenseLoading, setInitialLicenseLoading] =\n    useState<boolean>(true);\n  useState<boolean>(false);\n  const [clusterRegistered, setClusterRegistered] = useState<boolean>(false);\n\n  const [isLicenseConsentOpen, setIsLicenseConsentOpen] =\n    useState<boolean>(false);\n\n  const closeModalAndFetchLicenseInfo = () => {\n    setActivateProductModal(false);\n    fetchLicenseInfo();\n  };\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"license\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isRegistered = licenseInfo && clusterRegistered;\n\n  const isAgplConsentDone = getLicenseConsent();\n\n  useEffect(() => {\n    const shouldConsent =\n      !isRegistered && !isAgplConsentDone && !initialLicenseLoading;\n\n    if (shouldConsent && !loadingLicenseInfo) {\n      setIsLicenseConsentOpen(true);\n    }\n  }, [\n    isRegistered,\n    isAgplConsentDone,\n    initialLicenseLoading,\n    loadingLicenseInfo,\n  ]);\n\n  const fetchLicenseInfo = useCallback(() => {\n    if (loadingLicenseInfo) {\n      return;\n    }\n    setLoadingLicenseInfo(true);\n    api\n      .invoke(\"GET\", `/api/v1/subnet/info`)\n      .then((res: SubnetInfo) => {\n        if (res) {\n          if (res.plan === \"STANDARD\") {\n            setCurrentPlanID(1);\n          } else if (\n            [\"ENTERPRISE\", \"ENTERPRISE-LITE\", \"ENTERPRISE-PLUS\"].includes(\n              res.plan,\n            )\n          ) {\n            setCurrentPlanID(2);\n          } else {\n            setCurrentPlanID(1);\n          }\n          setLicenseInfo(res);\n        }\n        setClusterRegistered(true);\n        setLoadingLicenseInfo(false);\n      })\n      .catch(() => {\n        setClusterRegistered(false);\n        setLoadingLicenseInfo(false);\n      });\n  }, [loadingLicenseInfo]);\n\n  useEffect(() => {\n    if (initialLicenseLoading) {\n      fetchLicenseInfo();\n      setInitialLicenseLoading(false);\n    }\n  }, [fetchLicenseInfo, initialLicenseLoading, setInitialLicenseLoading]);\n\n  if (loadingLicenseInfo) {\n    return (\n      <Grid item xs={12}>\n        <ProgressBar />\n      </Grid>\n    );\n  }\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label=\"Community and Enterprise Editions\" />\n      <PageLayout>\n        <LicensePlans\n          activateProductModal={activateProductModal}\n          closeModalAndFetchLicenseInfo={closeModalAndFetchLicenseInfo}\n          licenseInfo={licenseInfo}\n          currentPlanID={currentPlanID}\n          setActivateProductModal={setActivateProductModal}\n        />\n\n        <LicenseConsentModal\n          isOpen={isLicenseConsentOpen}\n          onClose={() => {\n            setIsLicenseConsentOpen(false);\n          }}\n        />\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default License;\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","xmlns","viewBox","className","fill","points","LicensesInformation","styled","div","_ref","theme","display","gridTemplateColumns","justifyContent","marginTop","marginLeft","borderBottom","get","padding","borderRight","borderLeft","borderTop","borderTopLeftRadius","borderTopRightRadius","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","textAlign","paddingLeft","fontWeight","fontSize","color","marginBottom","backgroundColor","height","alignItems","_ref2","_licenseInfo$plan","licenseInfo","currentPlan","plan","toLowerCase","getButton","link","btnText","variant","linkToNav","Button","id","sx","width","onClick","e","preventDefault","window","open","label","renderFeatureInformation","content","_jsxs","Fragment","isCheck","CheckIcon","style","LICENSE_PLANS_INFORMATION","map","element","index","Box","planName","planType","planIcon","planDescription","FEATURE_ITEMS","feature","lastItem","featureLabel","featurePlans","openSource","eosPlus","LicenseConsentModal","withSuspense","React","License","activateProductModal","setActivateProductModal","useState","setLicenseInfo","currentPlanID","setCurrentPlanID","loadingLicenseInfo","setLoadingLicenseInfo","initialLicenseLoading","setInitialLicenseLoading","clusterRegistered","setClusterRegistered","isLicenseConsentOpen","setIsLicenseConsentOpen","dispatch","useAppDispatch","useEffect","setHelpName","isRegistered","isAgplConsentDone","getLicenseConsent","fetchLicenseInfo","useCallback","api","invoke","then","res","includes","catch","Grid","item","xs","ProgressBar","PageHeaderWrapper","PageLayout","LicensePlans","closeModalAndFetchLicenseInfo","isOpen","onClose"],"sourceRoot":""}